{"version":3,"sources":["components/axios.js","Context API/StateProvider.js","components/MovieCompo/MovieCompo.js","components/Row/row.js","components/request.js","components/Banner/banner.js","components/Header/header.js","Home.js","Details.js","App.js","serviceWorker.js","Context API/reducer.js","index.js"],"names":["instance","axios","create","baseURL","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","MovieCompo","movie","isLarge","dispatch","movieDetails","name","title","history","useHistory","handleClick","a","type","push","className","onClick","key","id","src","poster_path","backdrop_path","alt","length","slice","vote_average","vote_count","Row","fetchUrl","useState","movies","setMovies","useEffect","get","request","data","results","fetchData","map","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanticMovies","fetchDocumentories","Banner","setMovie","Math","floor","random","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Header","show","handleShow","window","addEventListener","scrollY","Home","Details","trailerUrl","setTrailerUrl","console","log","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","getMovie","release_date","media_type","videoId","opts","height","width","playerVars","autoplay","App","exact","path","Boolean","location","hostname","match","state","action","ReactDOM","render","favorites","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6556d7e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n/**base url to make request to the movie database */\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;\r\n","// Setup data layer\r\n// We need this to track the basket\r\n\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// This is the data layer\r\nexport const StateContext = createContext();\r\n\r\n// Build A Provider\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\n// This is how we use it inside of a component\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React from \"react\";\r\nimport \"./MovieCompo.style.css\";\r\nimport { useStateValue } from \"../../Context API/StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction MovieCompo({ movie, isLarge }) {\r\n  const [{ movieDetails }, dispatch] = useStateValue();\r\n  const name = movie.name || movie.title;\r\n  const history = useHistory();\r\n\r\n  const handleClick = async () => {\r\n    await dispatch({\r\n      type: \"SET_MOVIE\",\r\n      movie: movie,\r\n    });\r\n    history.push(\"/details\");\r\n  };\r\n  return (\r\n    <div className=\"col-lg-2 col-md-4 col-sm-6 col-10\">\r\n      <div className=\"movie\" onClick={handleClick}>\r\n        <img\r\n          key={movie.id}\r\n          className={`movie-poster ${isLarge && \"large-image\"}`}\r\n          src={`${base_url}${\r\n            isLarge ? movie.poster_path : movie.backdrop_path\r\n          }`}\r\n          alt={movie.name}\r\n        />\r\n        <p>{name.length > 15 ? name.slice(0, 12) + \"...\" : name}</p>\r\n        <small>\r\n          ‚≠ê{movie.vote_average}({movie.vote_count})\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCompo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./row.style.css\";\r\nimport MovieCompo from \"../MovieCompo/MovieCompo\";\r\n\r\nfunction Row({ title, fetchUrl, isLarge }) {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // if [], run once when row loads ,and don't run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl); //get the movies from api\r\n      setMovies(request.data.results);\r\n      return request.data.results;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movie-posters\">\r\n        {movies.map((movie) => (\r\n          <MovieCompo key={movie.id} isLarge={isLarge} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"682ac65cee955ba5f3b7d9eede6b7dae\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks-213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanticMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentories: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./banner.style.css\";\r\nimport axios from \"../axios\";\r\nimport { useStateValue } from \"../../Context API/StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Banner({ fetchUrl }) {\r\n  const [{ movieDetails }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // if [], run once when row loads ,and don't run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl); //get the movies from api\r\n      let movies = request.data.results;\r\n      let movie = movies[Math.floor(Math.random() * movies.length) - 1];\r\n      setMovie(movie);\r\n      return movie;\r\n    }\r\n    fetchData();\r\n  }, [Banner]);\r\n\r\n  const handleClick = () => {\r\n    dispatch({\r\n      type: \"SET_MOVIE\",\r\n      movie: movie,\r\n    });\r\n    history.push(\"/details\");\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n            'https://image.tmdb.org/t/p/original/${movie.backdrop_path}'\r\n            )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner-content\">\r\n        <h1>{movie.title || movie.name || movie.original_name}</h1>\r\n        <div className=\"banner-buttons\">\r\n          <button className=\"banner-button\" onClick={handleClick}>\r\n            Play\r\n          </button>\r\n          <button className=\"banner-button\">My List</button>\r\n        </div>\r\n        <h2 className=\"banner-description\">\r\n          {movie.overview?.length > 300\r\n            ? movie.overview.slice(0, 297) + \"...\"\r\n            : movie.overview}\r\n        </h2>\r\n      </div>\r\n      <div className=\"fade\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./header.style.css\";\r\n\r\nfunction Header() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 47) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      // window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`navber ${show && \"nav-black\"}`}>\r\n      <h3 className=\"logo\">MyFlix</h3>\r\n      <img\r\n        className=\"nav-avater\"\r\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Row from \"./components/Row/row\";\r\nimport requests from \"./components/request\";\r\nimport Banner from \"./components/Banner/banner\";\r\nimport Header from \"./components/Header/header\";\r\nimport \"./App.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"\">\r\n      <Header />\r\n      <Banner fetchUrl={requests.fetchNetflixOriginals} />\r\n      <div className=\"container\">\r\n        <Row\r\n          title=\"MYFLIX ORIGINALS\"\r\n          fetchUrl={requests.fetchNetflixOriginals}\r\n          isLarge\r\n        />\r\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n        <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n        <Row title=\"Romantic Movies\" fetchUrl={requests.fetchRomanticMovies} />\r\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentories} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport { useStateValue } from \"./Context API/StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Details() {\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const [{ movieDetails }, dispatch] = useStateValue();\r\n  const [movie, setMovie] = useState(movieDetails);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!movie) {\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    console.log(movie);\r\n    const getMovie = async () => {\r\n      if (trailerUrl) {\r\n        setTrailerUrl(\"\");\r\n      } else {\r\n        await movieTrailer(\r\n          movie?.title || movie?.name || movie?.original_name || \"\"\r\n        )\r\n          .then((url) => {\r\n            const urlParams = new URLSearchParams(new URL(url).search); //to get the search id\r\n            setTrailerUrl(urlParams.get(\"v\"));\r\n          })\r\n          .catch((error) => console.log(error));\r\n      }\r\n    };\r\n    getMovie();\r\n  }, []);\r\n\r\n  const opts = {\r\n    height: \"480\",\r\n    width: \"80%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"details my-4\">\r\n        <h1 className=\"details__name\">\r\n          {movie.title || movie.name || movie.original_name}\r\n        </h1>\r\n        <p>Realse Date : {movie.release_date}</p>\r\n        <p>\r\n          Type : <strong>{movie.media_type}</strong>{\" \"}\r\n        </p>\r\n        <p>\r\n          Rating :{\" \"}\r\n          <strong>\r\n            {movie.vote_average}/10 ({movie.vote_count})\r\n          </strong>\r\n        </p>\r\n\r\n        <div className=\"my-5\">\r\n          {trailerUrl ? (\r\n            <Youtube videoId={trailerUrl} opts={opts} />\r\n          ) : (\r\n            <h1>Sorry!! No trailer available for this movie</h1>\r\n          )}\r\n        </div>\r\n\r\n        <button className=\"details__addButton bg-info text-white\">\r\n          ADD TO FAVORITE\r\n        </button>\r\n\r\n        <p>{movie.overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n","import React from \"react\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Details from \"./Details\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/details\">\n          <Details />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  favorites: [],\r\n  movieDetails: {},\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_MOVIE\":\r\n      return {\r\n        ...state,\r\n        movieDetails: action.movie,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { StateProvider } from \"./Context API/StateProvider\";\nimport reducer, { initialState } from \"./Context API/reducer\";\n\nReactDOM.render(\n  <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}